//Middle layer for the web application vulnerability scanner

/*
    - Connects the front-end to the back-end 
        - Passes the input URL from the front-end to the back-end 
        - Input is then processed into results which is passed from back-end to middle layer to front-end
*/

const express = require("express");
const axios = require("axios");
const bodyParser = require("body-parser");
const cors = require("cors"); 
const app = express();


app.use(bodyParser.json());
//To allow for cross origin requests
app.use(cors());

//Implementing restful API endpoint
app.post('/api/startScanning', async(req, res) => {
    //Extracting the url from the body request 
    const {url} = req.body; 
    console.log('Received URL in Node.js middle layer', url);

    //Attempting to send the url to the backend 
    //If successful, then forward the response back to the front-end 
    //Handles any error that might occur between middle layert and backend
    try {
        const response = await axios.post('http://localhost:9090/api/startScanning', {url});
        console.log('Response from Spring Boot:', response.data);
        res.json(response.data);
    } catch(error){
        console.error("Error with Spring Boot: ", error);
        res.status(500).send("Cannot start scan")
    }
});

//Specifying a port number for server to listen on
const PORT = 5000;
app.listen(PORT, () => {
    console.log("Middle layer server is running on port", {PORT});
});